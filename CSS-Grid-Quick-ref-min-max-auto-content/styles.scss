.minmax-grid {
    width: 1000px;
    margin: 30px auto;
    background-color: #ddd;

    display: grid;
    ////--- using mincontent and max-content
    // grid-template-rows: repeat(2, 150px );
    //grid-template-columns: max-content 1fr 1fr min-content; // - the min-content here will be the width of the largest word in the sentence, then it's overflowed - which iz hidden - this would be the same on the
    //  columns - grid-template-columns: min-content... the column would be the width of the longest word in the sentence, or whichever element is the widest in that column of cells

    //grid-template-rows: repeat(2, min-content ); // - the min-content on the row fixes this

    //// -- using minmax function - cell remains between width of given valuez
    //grid-template-rows: repeat(2, minmax(150px, min-content)); // 2 rows, at least 150px, but will grow if content is larger
    //grid-template-columns: minmax(200px, 300px) repeat(3, 1fr);// - min col width 200px, max 300px - remaining 3
    //  cols 1fr - column starts as 300px, will stay that size until the window is too small - will decrease then under 300px but no smaller than 200px

    // -- Using auto-fill & auto-fit 
    grid-template-rows: repeat(2, minmax(150px, min-content)); 
    // grid-template-columns: repeat(auto-fill, 100px); //autofill will create 10 trax, as container iz 1000px / 10
    //grid-template-columns: repeat(auto-fit, 100px); //autofit will create 10 trax, as container iz 1000px / 10, but collapses the empty cols
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); //autofit with minmax, will fill the container
    // this will show 5 cols, and show 3 on the 2nd row
    grid-auto-rows: 150px;
    width: 90%;

    .item {
        padding: 10px;
        color: white;
        font-family: sans-serif;
        font-size: 30px;
        
        &--1 { background-color: orangered; }
        &--2 { background-color: yellowgreen; }
        &--3 { background-color: blueviolet; }
        &--4 { background-color: palevioletred; }
        &--5 { background-color: royalblue; }
        &--6 { background-color: goldenrod; }
        &--7 { background-color: crimson; }
        &--8 { background-color: darkslategray; }
    }
}